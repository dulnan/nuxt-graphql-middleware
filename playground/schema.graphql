type FormSubmission {
  documents: [FormSubmissionDocument]
  firstName: String
  id: String!
  lastName: String
}

type FormSubmissionDocument {
  file: UploadedFile!
  name: String
}

input FormSubmissionDocumentsInput {
  file: Upload!
  name: String
}

input FormSubmissionInput {
  documents: [FormSubmissionDocumentsInput]
  firstName: String
  lastName: String
}

type Mutation {
  createUser(user: UserData!): User!
  deleteUser(id: Int!): Boolean
  initState: Boolean!
  submitForm(input: FormSubmissionInput!): Boolean!
  triggerError: Boolean
  uploadFile(file: Upload): Boolean!
}

type Query {
  getCurrentTime: String
  getError: Boolean
  getRequestHeader(name: String!): String
  getSubmissions: [FormSubmission]
  testFetchOptions: TestFetchOptions
  userById(id: ID!): User
  users: [User!]!
}

type TestFetchOptions {
  headerClient: String
  headerServer: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UploadedFile {
  content: String!
  id: String!
  name: String!
}

type User {
  dateOfBirth: String
  description: String
  email: String!
  firstName: String!
  friends: [User]
  id: Int!
  lastName: String!
}

input UserData {
  dateOfBirth: String
  description: String
  email: String!
  firstName: String!
  lastName: String!
}