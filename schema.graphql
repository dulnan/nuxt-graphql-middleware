type DataForLayer {
  text: String
}

type FormSubmission {
  documents: [FormSubmissionDocument]
  firstName: String
  id: String!
  lastName: String
}

type FormSubmissionDocument {
  file: UploadedFile!
  name: String
}

input FormSubmissionDocumentsInput {
  file: Upload!
  name: String
}

input FormSubmissionInput {
  documents: [FormSubmissionDocumentsInput]
  firstName: String
  lastName: String
}

enum MeansOfContact {
  email
  phone
}

type Mutation {
  createUser(user: UserData!): User!
  deleteUser(id: Int!): Boolean
  initState: Boolean!
  submitForm(input: FormSubmissionInput!): Boolean!
  triggerError: Boolean
  uploadFile(file: Upload): Boolean!
}

type Query {
  dataForLayer: DataForLayer

  """Get the current time."""
  getCurrentTime: String

  """Produce a GraphQL error."""
  getError: Boolean

  """Returns the value of a request header."""
  getRequestHeader(name: String!): String

  """Get all submissions."""
  getSubmissions: [FormSubmission]

  """Test the client options."""
  testClientOptions(path: String!): TestClientOptions

  """Test the fetch options."""
  testFetchOptions: TestFetchOptions

  """Load a user by ID."""
  userById(id: ID!): User

  """Get all users."""
  users: [User!]!
}

type TestClientOptions {
  language: String
  languageFromPath: String
}

type TestFetchOptions {
  headerClient: String
  headerServer: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UploadedFile {
  content: String!
  id: String!
  name: String!
}

type User {
  """Date of birth as YYYY-MM-DD."""
  dateOfBirth: String

  """Description."""
  description: String

  """Email address."""
  email: String!

  """First name of the user."""
  firstName: String!

  """All their friends."""
  friends: [User]

  """The ID of the user."""
  id: Int!

  """Last name of the user."""
  lastName: String!

  """How the user likes to be contacted."""
  meansOfContact: MeansOfContact
}

input UserData {
  dateOfBirth: String
  description: String
  email: String!
  firstName: String!
  lastName: String!
}